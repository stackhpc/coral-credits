# The operator image to use
image:
  repository: ghcr.io/stackhpc/coral-credits
  pullPolicy: IfNotPresent
  tag: ""  # Defaults to appVersion

imagePullSecrets: []

# Liveness probe for the operator
livenessProbe:
  httpGet:
    path: /_status/
    port: http
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3

# Startup probe for the operator
startupProbe:
  httpGet:
    path: /_status/
    port: http
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3

# Readiness probe for the operator
readinessProbe:
  httpGet:
    path: /_status/
    port: http
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3
  initialDelaySeconds: 10

# Pod-level security context
podSecurityContext:
  runAsNonRoot: true

# Persistence
persistence:
  # The size of the PVC
  size: 2Gi
  # The access modes for the PVC
  accessMode: 
    - ReadWriteOnce
  # The storage class to use for the PVC
  # If not given, the default storage class is used
  # If set to "-" then storageClassName is set to "", disabling dynamic provisioning
  storageClass:
  # The volume binding mode for the created PVC
  # If not given, the default volume binding mode for the storage class is used
  volumeBindingMode:
  # The label selector to use to filter eligible PVs
  # Useful if PVs have been provisioned in advance
  selector:
  # The name of a specific PV to bind
  # Useful if you want to bind to a specific pre-provisioned PV
  volumeName:


# Container-level security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: [ALL]
  readOnlyRootFilesystem: true

# Ingress settings
ingress:
  # The hostname to use for the portal
  host:
  # The ingress class to use
  className: nginx
  # Annotations for the portal ingress
  annotations: {}
  # TLS configuration for the portal ingress
  tls:
    # Indicates if TLS should be enabled
    enabled: true
    # The secret to use for the TLS certificate and key
    secretName:
    # TLS-specific ingress annotations, e.g. for cert-manager configuration
    annotations: {}

# Django settings
settings:
  # The Django secret key
  # If not given, a randomly generated key will be used
  # However this will be different on each deployment which may cause sessions to be terminated
  secretKey:
  # Same for the django superuser password
  superuserPassword:
  # Superuser username
  superuserUsername:
  # Superuser email
  superuserEmail:
  # Use debug mode (recommended false in production)
  debug: false
  # Database settings
  database:
    # Database engine (default: django.db.backends.sqlite3)
    engine:
    # Database name (default: /data/db.sqlite3)
    name:
    # Database user (optional)
    user:
    # Database password (optional)
    password:
    # Database host (optional)
    host:
    # Database port (optional)
    port:

# Resource requests and limits for the containers
resources: {}

# replica count
replicaCount: 1

# Service details for the api
service:
  type: ClusterIP
  api:
    port: 8080
  prometheusExporter:
    port: 8000

# Monitoring
monitoring:
  enabled: true
  dashboard:
    enabled: true
    labels:
      grafana_dashboard: "1"
  
# Node selector for pods
nodeSelector: {}

# Affinity rules for pods
affinity: {}

# Tolerations for pods
tolerations: []


# Coral credits configuration
config:
  # Credit user quota settings
  quota:
    # Whether to enable quota limits. Default is false.
    enabled:
    # The time period over which quota should be enforced (week, month). Default is week.
    limit_period:
    # Quota is calculated as daily_average*usage_limit*limit_period.
    # daily_average is calculated as the amount of resource per day for a given allocation.
    # The daily quota in %. Default is 200.
    usage_limit: